---
- name: Find enabled sites
  shell: ls -1 {{nginx_conf_dir}}/sites-enabled || true
  register: enabled_sites
  changed_when: False
  tags: [configuration,nginx]

- name: Disable unmanaged sites
  file: path={{nginx_conf_dir}}/sites-enabled/{{ item }} state=absent
  with_items: "{% if not enabled_sites|skipped %}{{ enabled_sites.stdout_lines }}{% endif %}"
  # 'item.conf' => 'item'
  when: item[:-5] not in nginx_sites.keys() and item[:-5] not in nginx_default_sites.keys()
  notify:
   - reload nginx
  tags: [configuration,nginx]

- name: Find config files
  shell: ls -1 {{nginx_conf_dir}}/conf.d
  register: config_files
  changed_when: False
  tags: [configuration,nginx]

- name: Remove unmanaged config files
  file: name={{nginx_conf_dir}}/conf.d/{{ item }} state=absent
  with_items: "{% if not config_files|skipped %}{{ config_files.stdout_lines }}{% endif %}"
  # 'item.conf' => 'item'
  when: item[:-5] not in nginx_configs.keys()
  notify:
   - reload nginx
  tags: [configuration,nginx]

- name: Find extra files
  shell: ls -1 {{nginx_conf_dir}}/extra
  register: extra_files
  changed_when: False
  tags: [configuration,nginx]

- name: Remove unmanaged extra files
  file: name={{nginx_conf_dir}}/extra/{{item}} state=absent
  with_items: "{% if not extra_files|skipped %}{{ extra_files.stdout_lines }}{% endif %}"
  when: item not in nginx_extra_files.keys()
  notify:
   - reload nginx
  tags: [configuration,nginx]
